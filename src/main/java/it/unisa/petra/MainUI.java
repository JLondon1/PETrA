package it.unisa.petra;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Antonio Prota
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form ContactEditorUI
     */
    public MainUI() {
        initComponents();
        PrintStream out = new PrintStream(new TextAreaOutputStream(statusLabel));
        System.setOut(out);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        appNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        apkLocationField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        platformFolder = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        powerprofileFile = new javax.swing.JTextField();
        startProcessButton = new javax.swing.JButton();
        locationButton = new javax.swing.JButton();
        platformToolsFolderButton = new javax.swing.JButton();
        powerprofileButton = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        timeInteractionsSlider = new javax.swing.JSlider();
        monkeyInteractionsSlider = new javax.swing.JSlider();
        runsSlider = new javax.swing.JSlider();
        viewStats = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        statusLabel = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PETrA");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/petra.png")).getImage());
        setResizable(false);

        jLabel1.setText("App Name");

        appNameField.setToolTipText("Name of the app to analyze (must be the same of the app process).");

        jLabel3.setText("Apk Location");

        apkLocationField.setEditable(false);
        apkLocationField.setToolTipText("Apk to analyze.");

        jLabel4.setText("Runs");

        jLabel5.setText("Monkey Interactions");

        jLabel6.setText("Time Between Interactions");

        jLabel7.setText("Android SDK Platform Tools folder");

        platformFolder.setEditable(false);
        platformFolder.setToolTipText("Path of the Android SDK Platform Tools folder.");

        jLabel9.setText("Power Profile File");

        powerprofileFile.setEditable(false);
        powerprofileFile.setToolTipText("Device power profile (see https://source.android.com/devices/tech/power/).");
        powerprofileFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerprofileFileActionPerformed(evt);
            }
        });

        startProcessButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/play-button.png"))); // NOI18N
        startProcessButton.setText("Start Energy Estimation");
        startProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProcessButtonActionPerformed(evt);
            }
        });

        locationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder.png"))); // NOI18N
        locationButton.setText("Open");
        locationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationButtonActionPerformed(evt);
            }
        });

        platformToolsFolderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder.png"))); // NOI18N
        platformToolsFolderButton.setText("Open");
        platformToolsFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                platformToolsFolderButtonActionPerformed(evt);
            }
        });

        powerprofileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/folder.png"))); // NOI18N
        powerprofileButton.setText("Open");
        powerprofileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerprofileButtonActionPerformed(evt);
            }
        });

        progressBar.setStringPainted(true);

        timeInteractionsSlider.setMajorTickSpacing(500);
        timeInteractionsSlider.setMaximum(5000);
        timeInteractionsSlider.setMinorTickSpacing(100);
        timeInteractionsSlider.setPaintLabels(true);
        timeInteractionsSlider.setPaintTicks(true);
        timeInteractionsSlider.setSnapToTicks(true);
        timeInteractionsSlider.setToolTipText("Time between an Android Monkey event and the next one in ms.");
        timeInteractionsSlider.setValue(0);

        monkeyInteractionsSlider.setMajorTickSpacing(500);
        monkeyInteractionsSlider.setMaximum(5000);
        monkeyInteractionsSlider.setMinorTickSpacing(100);
        monkeyInteractionsSlider.setPaintLabels(true);
        monkeyInteractionsSlider.setPaintTicks(true);
        monkeyInteractionsSlider.setSnapToTicks(true);
        monkeyInteractionsSlider.setToolTipText("Number of Android Monkey event to perform.");
        monkeyInteractionsSlider.setValue(0);

        runsSlider.setMajorTickSpacing(5);
        runsSlider.setMaximum(30);
        runsSlider.setMinorTickSpacing(1);
        runsSlider.setPaintLabels(true);
        runsSlider.setPaintTicks(true);
        runsSlider.setSnapToTicks(true);
        runsSlider.setToolTipText("Number of repetitions of the measurement process.");
        runsSlider.setValue(0);

        viewStats.setIcon(new javax.swing.ImageIcon(getClass().getResource("/graph.png"))); // NOI18N
        viewStats.setText("Statistics");
        viewStats.setEnabled(false);
        viewStats.setFocusPainted(false);
        viewStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewStatsActionPerformed(evt);
            }
        });

        jScrollPane1.setToolTipText("");
        jScrollPane1.setEnabled(false);

        statusLabel.setEditable(false);
        statusLabel.setColumns(20);
        statusLabel.setDisabledTextColor(new java.awt.Color(1, 1, 1));
        statusLabel.setEnabled(false);
        jScrollPane1.setViewportView(statusLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(platformFolder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                            .addComponent(powerprofileFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(platformToolsFolderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(powerprofileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(appNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apkLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(locationButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(runsSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(monkeyInteractionsSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeInteractionsSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(startProcessButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewStats, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(appNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(apkLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6))
                    .addComponent(timeInteractionsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monkeyInteractionsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(runsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(platformFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(platformToolsFolderButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(powerprofileFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(powerprofileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startProcessButton)
                    .addComponent(viewStats, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        startProcessButton.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProcessButtonActionPerformed
        try {
            statusLabel.setText(null);
            viewStats.setEnabled(false);

            String appName = this.appNameField.getText();
            String apkLocationPath = this.apkLocationField.getText();
            int runs = this.runsSlider.getValue();
            int interactions = monkeyInteractionsSlider.getValue();
            int timeBetweenInteractions = timeInteractionsSlider.getValue();
            String platformToolsFolderPath = platformFolder.getText();
            String powerProfilePath = powerprofileFile.getText();

            String outputLocationPath = new File(apkLocationPath).getParent() + File.separator + "test_data" + File.separator + appName;

            boolean valid = true;

            if (appName.isEmpty()) {
                System.out.println("App name missing.");
                valid = false;
            }

            if (apkLocationPath.isEmpty()) {
                System.out.println("Apk location missing.");
                valid = false;
            }

            if (powerProfilePath.isEmpty()) {
                System.out.println("Power profile missing.");
                valid = false;
            }

            if (runs <= 0) {
                System.out.println("You must execute at least one run.");
                valid = false;
            }

            if (interactions <= 0) {
                System.out.println("You must perform at least one Monkey interaction.");
                valid = false;
            }

            if (platformToolsFolderPath.isEmpty()) {
                System.out.println("Please select the Android SDK Platform Tools folder.");
                valid = false;
            }

            if (powerProfilePath.isEmpty()) {
                System.out.println("Please select an Android Power Profile file.");
                valid = false;
            }

            if (valid == false) {
                return;
            }

            PETrAProcess process = new PETrAProcess();

            File appDataFolder = new File(outputLocationPath);
            appDataFolder.mkdirs();
            File seedsFile = new File(outputLocationPath + File.separator + "seeds");
            BufferedWriter seedsWriter = new BufferedWriter(new FileWriter(seedsFile, true));
            process.installApp(outputLocationPath, apkLocationPath);

            int trials = 0;
            int timeCapturing = (interactions * timeBetweenInteractions) / 1000;
            for (int run = 0; run < runs; run++) {
                try {
                    PETrAProcessOutput output = process.playRun(run, trials, appName, interactions, timeBetweenInteractions, timeCapturing,
                            platformToolsFolderPath, powerProfilePath, outputLocationPath);
                    seedsWriter.append(output.getSeed() + "\n");
                    timeCapturing = output.getTimeCapturing();
                    int progressBarValue = ((run + 1) / runs) * 100;
                    SwingUtilities.invokeLater(() -> {
                        progressBar.setValue(progressBarValue);
                    });
                    progressBar.updateUI();
                } catch (IOException | ParseException | InterruptedException | NoDeviceFoundException ex) {
                    run--;
                    trials++;
                }
            }
            process.uninstallApp(appName);
            viewStats.setEnabled(true);
        } catch (IOException | NoDeviceFoundException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
            viewStats.setEnabled(false);
        }
    }//GEN-LAST:event_startProcessButtonActionPerformed

    private void locationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Apk Files", "apk");
        chooser.setFileFilter(filter);
        int res = chooser.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            apkLocationField.setText(filename);
        }
    }//GEN-LAST:event_locationButtonActionPerformed

    private void platformToolsFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_platformToolsFolderButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        int res = chooser.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            platformFolder.setText(filename);
        }
    }//GEN-LAST:event_platformToolsFolderButtonActionPerformed

    private void powerprofileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerprofileButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        int res = chooser.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            powerprofileFile.setText(filename);
        }
    }//GEN-LAST:event_powerprofileButtonActionPerformed

    private void powerprofileFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerprofileFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_powerprofileFileActionPerformed

    private void viewStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewStatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewStatsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                } else if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apkLocationField;
    private javax.swing.JTextField appNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton locationButton;
    private javax.swing.JSlider monkeyInteractionsSlider;
    private javax.swing.JTextField platformFolder;
    private javax.swing.JButton platformToolsFolderButton;
    private javax.swing.JButton powerprofileButton;
    private javax.swing.JTextField powerprofileFile;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JSlider runsSlider;
    private javax.swing.JButton startProcessButton;
    private javax.swing.JTextArea statusLabel;
    private javax.swing.JSlider timeInteractionsSlider;
    private javax.swing.JButton viewStats;
    // End of variables declaration//GEN-END:variables
}
